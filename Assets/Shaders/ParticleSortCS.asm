//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer SortConstants
// {
//
//   uint4 g_kj;                        // Offset:    0 Size:    16
//
// }
//
// cbuffer ActiveListCount
// {
//
//   int g_NumActiveParticles;          // Offset:    0 Size:     4
//   int3 pad;                          // Offset:    4 Size:    12 [unused]
//
// }
//
// Resource bind info for aliveList
// {
//
//   struct ParticleAlive
//   {
//       
//       uint index;                    // Offset:    0
//       float distanceSq;              // Offset:    4
//       float2 padding;                // Offset:    8
//
//   } $Element;                        // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// aliveList                             UAV  struct         r/w    0        1
// SortConstants                     cbuffer      NA          NA    0        1
// ActiveListCount                   cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer cb0[1], immediateIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_uav_structured u0, 16
dcl_input vThreadID.x
dcl_temps 3
dcl_thread_group 32, 1, 1
//
// Initial variable locations:
//   vThreadID.x <- DTid.x; vThreadID.y <- DTid.y; vThreadID.z <- DTid.z
//
#line 34 "E:\User Docs\Documents\RIT\2016-2017\Spring\Game Graphics\Game-Graphics-Programming-Project\ParticleSortCS.hlsl"
mov r0.x, l(1)
ineg r0.x, r0.x
iadd r0.x, r0.x, cb0[0].y
and r0.x, r0.x, vThreadID.x  // r0.x <- index_low
mov r0.y, l(2)
ineg r0.z, r0.x
iadd r0.z, r0.z, vThreadID.x
imul null, r0.y, r0.z, r0.y  // r0.y <- index_high
iadd r0.x, r0.x, r0.y  // r0.x <- index
xor r0.y, r0.x, cb0[0].y  // r0.y <- nSwapElem
mov r0.z, cb1[0].x
ult r0.z, r0.x, r0.z
mov r0.w, cb1[0].x
ult r0.w, r0.y, r0.w
and r0.z, r0.w, r0.z
if_nz r0.z
  ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r0.z, r0.x, l(0), u0.xxxx  // r0.z <- a.index
  ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r0.w, r0.x, l(4), u0.xxxx  // r0.w <- a.distanceSq
  ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r1.x, r0.x, l(8), u0.xxxx  // r1.x <- a.padding.x
  ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r1.y, r0.x, l(12), u0.xxxx  // r1.y <- a.padding.y
  ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r1.z, r0.y, l(0), u0.xxxx  // r1.z <- b.index
  ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r1.w, r0.y, l(4), u0.xxxx  // r1.w <- b.distanceSq
  ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r2.x, r0.y, l(8), u0.xxxx  // r2.x <- b.padding.x
  ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r2.y, r0.y, l(12), u0.xxxx  // r2.y <- b.padding.y
  ult r2.z, cb0[0].w, r0.x  // r2.z <- ascending

#line 48
  lt r2.w, r0.w, r1.w  // r2.w <- AisGreater
  ieq r2.z, r2.w, r2.z
  if_nz r2.z
    store_structured u0.x, r0.x, l(0), r1.z
    store_structured u0.x, r0.x, l(4), r1.w
    store_structured u0.x, r0.x, l(8), r2.x
    store_structured u0.x, r0.x, l(12), r2.y
    store_structured u0.x, r0.y, l(0), r0.z
    store_structured u0.x, r0.y, l(4), r0.w
    store_structured u0.x, r0.y, l(8), r1.x
    store_structured u0.x, r0.y, l(12), r1.y
  endif 
endif 
ret 
// Approximately 39 instruction slots used
